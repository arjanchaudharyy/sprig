const player = "p"
const wall = "w"
const coin = "c"
const floor = "f"
const zombie = "z"

setLegend(
  [ player, bitmap`
................
.....333333.....
....33333333....
...3333333333...
...3333333333...
....33333333....
.....333333.....
......3333......
......3333......
.....333333.....
....333..333....
...33....33.....
...3......3.....
...3......3.....
....3....3......
.....33..3......` ],

  [ wall, bitmap`
1LLLL1111LLL1LL1
L1LL11LLLL11LL11
1LLL111LL1L1LL11
L1LL1LLLL11LL1LL
1LLL111LLL1LL1L1
1LLL1LLL1LLL111L
1LL11LLLL1LL1LL1
L1LLL1LL1LLL111L
11LLL1LL11L1LL1L
1LLL1LLL1LLL1LL1
L1LL1L1LL1LL1LL1
1LLL1LLL1L1LLL1L
1LLL1L1L1LLL1LL1
1LL11LLL1LL11LL1
1LL1LL1L1LLL1LL1
1LLL1111LLL111LL` ],

  [ coin, bitmap`
................
.......66.......
......6666......
.....667766.....
.....677776.....
.....677776.....
.....677776.....
......6666......
.......66.......
................
................
................
................
................
................
................` ],

  [ floor, bitmap`
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................` ],

  [ zombie, bitmap`
................
......7777......
.....777777.....
.....776677.....
.....767767.....
.....777777.....
......7777......
.....77..77.....
.....77..77.....
.....76..67.....
.....76..67.....
....77....77....
....77....77....
....77....77....
.....7....7.....
................` ]
)

setBackground(floor)
setSolids([player, wall])
setPushables({ [player]: [] })

const level = map`
wwwwwwwwwwwwww
wp....w.....cw
w..wwwwwww...w
w..w..z..w.c.w
w..w.c...w...w
w..w..z..w...w
w..wwww.www..w
w..c.........w
w.....z..w...w
w..c....w....w
wc..........cw
wwwwwwwwwwwwww`
setMap(level)

onInput("w", () => getFirst(player).y -= 1)
onInput("s", () => getFirst(player).y += 1)
onInput("a", () => getFirst(player).x -= 1)
onInput("d", () => getFirst(player).x += 1)

function getDirectionToward(z, target) {
  const dx = target.x - z.x
  const dy = target.y - z.y
  if (Math.abs(dx) > Math.abs(dy)) {
    return { x: z.x + Math.sign(dx), y: z.y }
  } else {
    return { x: z.x, y: z.y + Math.sign(dy) }
  }
}

function isBlocked(x, y) {
  const tile = getTile(x, y)
  return tile.some(t => t.type === wall || t.type === zombie)
}

let zombieTurn = false

function moveZombies() {
  if (!zombieTurn) {
    zombieTurn = true
    return
  }
  zombieTurn = false

  const playerObj = getFirst(player)
  if (!playerObj) return

  getAll(zombie).forEach(z => {
    const next = getDirectionToward(z, playerObj)
    if (
      next.x === playerObj.x &&
      next.y === playerObj.y
    ) {
      clearText()
      addText("GAME OVER!", { x: 4, y: 6, color: color`1` })
      return
    }

    if (!isBlocked(next.x, next.y)) {
      z.x = next.x
      z.y = next.y
    }
  })
}

afterInput(() => {
  const { x, y } = getFirst(player)
  const tile = getTile(x, y)

  for (let s of tile) {
    if (s.type === coin) s.remove()
    if (s.type === zombie) {
      clearText()
      addText("GAME OVER!", { x: 4, y: 6, color: color`5` })
      return
    }
  }

  if (tilesWith(coin).length === 0) {
    clearText()
    addText("YOU WIN!", { x: 5, y: 6, color: color`3` })
    return
  }

  moveZombies()
})
